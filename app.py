from flask import Flaskfrom extensions import db, login_managerfrom routes import routes_bpfrom models import Userfrom werkzeug.security import generate_password_hashapp = Flask(__name__)app.config['SECRET_KEY'] = 'секретный_ключ'app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///база_данных.db'db.init_app(app)login_manager.init_app(app)login_manager.login_view = 'routes.teacher_login'app.register_blueprint(routes_bp)# Создает пользователя с правами администратора, если он не существуетdef create_admin_user(apps):    with apps.app_context():        db.create_all()        admin = User.query.filter_by(is_admin=True).first()        if not admin:            print("Администратор не найден. Пожалуйста, установите пароль администратора.")            while True:                password = input("Введите пароль администратора: ").strip()                if password:                    break                else:                    print("Пароль не может быть пустым.")            hashed_password = generate_password_hash(password, method='pbkdf2:sha256')            admin = User(username='admin', password=hashed_password, is_admin=True)            db.session.add(admin)            db.session.commit()            print("Администратор создан.")if __name__ == '__main__':    with app.app_context():        db.create_all()        create_admin_user(app)    app.run(debug=True, port=5004)